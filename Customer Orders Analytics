-- Here I've queried a database containing a table with customer information and several tables with order information according to month.
-- Due to inconsistent or missing order IDs, some rows were ommitted. 

-- How many orders were placed in January?
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID)=6 AND orderID <> 'Order ID';

-- How many of those orders were for an iPhone?
SELECT COUNT(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID)=6 AND orderID <> 'Order ID'
AND Product = 'iPhone';

-- Select the customer account numbers for all the orders that were placed in February.
SELECT distinct customers.acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales ON customers.order_id = FebSales.orderID
WHERE length(FebSales.orderID)=6 AND FebSales.orderID <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE length(orderID)=6 AND orderID <> 'Order ID'
AND price = (SELECT MIN(price)FROM BIT_DB.JanSales)
GROUP BY Product;

-- What is the total revenue for each product sold in January? 
SELECT Product, ROUND(SUM(Quantity) * price,2) AS 'Total Revenue By Product'
FROM BIT_DB.JanSales
WHERE length(orderID)=6 AND orderID <> 'Order ID'
GROUP BY Product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(quantity),ROUND(SUM(Quantity) * price,2) AS 'Total Revenue'
FROM BIT_DB.FebSales
WHERE length(orderID)=6 AND orderID <> 'Order ID'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct customers.acctnum) AS 'Sum of Customers Who Ordered 2+ Items at a Time', ROUND(AVG(FebSales.quantity * FebSales.price),2) AS 'Average Amount Spent'
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales ON customers.order_id = FebSales.orderID
WHERE length(FebSales.orderID)=6 AND FebSales.orderID <> 'Order ID'
AND length(customers.order_id)=6 AND customers.order_id <> 'Order ID'
AND FebSales.Quantity > 2;

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location like '%NY%'
AND length(orderID)=6 AND orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID)>=3;

-- How many of each type of headphone were sold in February?
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product like '%headphone%'
GROUP BY Product;

-- What was the average amount spent per account in February?
SELECT (SUM(Quantity * price))/COUNT(acctnum)
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales ON customers.order_id = FebSales.orderID
WHERE length(orderID)=6 AND orderID <> 'Order ID';

-- What was the average quantity of products purchased per account in February?
SELECT SUM(Quantity)/COUNT(acctnum)
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales ON customers.order_id = FebSales.orderID
WHERE length(orderID)=6 AND orderID <> 'Order ID';

-- Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(Quantity * price) AS 'Revenue'
FROM BIT_DB.JanSales
WHERE length(orderID)=6 AND orderID <> 'Order ID'
GROUP BY Product
ORDER BY 'Revenue' desc
LIMIT 1;
